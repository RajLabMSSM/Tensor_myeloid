library(shiny); runApp('Desktop/Tensor_myeloid/Tensor_myeloid_ShinyApp.R')
runApp('Desktop/Tensor_myeloid/Tensor_myeloid_ShinyApp.R')
runApp('Desktop/Tensor_myeloid/Tensor_myeloid_ShinyApp.R')
runApp('Desktop/Tensor_myeloid/Tensor_myeloid_ShinyApp.R')
runApp('Desktop/Tensor_myeloid/Tensor_myeloid_ShinyApp.R')
runApp('Desktop/Tensor_myeloid/Tensor_myeloid_ShinyApp.R')
runApp('Desktop/Tensor_myeloid/Tensor_myeloid_ShinyApp.R')
t6 <-addTable(6)
addTable <- function(tabNum){
print(paste("Creating Table",toString(tabNum)))
file <- read.delim(paste("supp_tables/SUPPLEMENTARY_TABLE_",toString(tabNum),".txt", sep=""), fill=NA, header=T, stringsAsFactors=F)
if(tabNum %in% c(6,7)){
file <- subset(file, select=c("COMP","SNP","PVAL","Disease", "FDR"))
colnames(file) <- c("Component","SNP","P-value", "Disease", "FDR")
## FF component plots
if(tabNum==6){
}
## FF component plots
}
file <- unique(file)
table <- DT::renderDT({
DT::datatable(file, options=opts, filter='top', rownames=F,
class='cell-border stripe', selection='single')
})
return(table)
}
t6 <-addTable(6)
setwd("~/Desktop/Tensor_myeloid")
library(shiny)
library(DT)
t6 <-addTable(6)
head(t6)
addTable <- function(tabNum){
print(paste("Creating Table",toString(tabNum)))
file <- read.delim(paste("supp_tables/SUPPLEMENTARY_TABLE_",toString(tabNum),".txt", sep=""), fill=NA, header=T, stringsAsFactors=F)
if(tabNum %in% c(6,7)){
file <- subset(file, select=c("COMP","SNP","PVAL","Disease", "FDR"))
colnames(file) <- c("Component","SNP","P-value", "Disease", "FDR")
## FF component plots
if(tabNum==6){
}
## FF component plots
}
file <- unique(file)
table <- DT::renderDT({
DT::datatable(file, options=opts, filter='top', rownames=F,
class='cell-border stripe', selection='single')
})
return(table)
}
t6 <-addTable(6)
t6
str(t6)
typeof(t6)
helpText(t6["Component", rowNum])
#   s = input$t6_rows_selected
#   if (length(s)) {
#     filename <- normalizePath(file.path('./figures',
#                             paste('fig1.png', sep='')))
#     # Return a list containing the filename and alt text
#     list(src = filename,
#          alt = paste("Image number", "_test"))
#   }
# }, deleteFile=F)
#
as.data.frame(t6)
runApp('Tensor_myeloid_ShinyApp.R')
runApp('Tensor_myeloid_ShinyApp.R')
runApp('Tensor_myeloid_ShinyApp.R')
runApp('Tensor_myeloid_ShinyApp.R')
runApp('Tensor_myeloid_ShinyApp.R')
runApp('Tensor_myeloid_ShinyApp.R')
runApp('Tensor_myeloid_ShinyApp.R')
runApp('Tensor_myeloid_ShinyApp.R')
runApp('Tensor_myeloid_ShinyApp.R')
runApp('Tensor_myeloid_ShinyApp.R')
runApp('Tensor_myeloid_ShinyApp.R')
runApp('Tensor_myeloid_ShinyApp.R')
runApp('Tensor_myeloid_ShinyApp.R')
runApp('Tensor_myeloid_ShinyApp.R')
setwd("~/Desktop/Tensor_myeloid")
runApp('Tensor_myeloid_ShinyApp.R')
runApp('Tensor_myeloid_ShinyApp.R')
runApp('Tensor_myeloid_ShinyApp.R')
library(shiny)
library(DT)
setwd("~/Desktop/Tensor_myeloid")
runApp('Tensor_myeloid_ShinyApp.R')
runApp('Tensor_myeloid_ShinyApp.R')
runApp('Tensor_myeloid_ShinyApp.R')
test_file <- readBin(con=filenameh,what = 'raw')
test_file <- readBin(con=filename,what = 'raw')
filename <- normalizePath(file.path('./CG_Components', 'cardio_Component_1.pdf'))
test_file <- readBin(con=filename,what = 'raw')
test_file
str(test_file)
